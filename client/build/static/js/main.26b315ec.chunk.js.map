{"version":3,"sources":["components/Navbar/Navbar.module.css","pages/AuthPage/AuthPage.module.css","App.module.css","img/logout.png","context/AuthContext.js","pages/AuthPage/AuthPage.jsx","hooks/message.hook.js","hooks/http.hook.js","pages/Page1/Page1.jsx","pages/Page2/Page2.jsx","pages/Page3/Page3.jsx","components/Navbar/Navbar.jsx","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","createContext","token","userId","login","logout","isAuthentificated","AuthPage","auth","useContext","message","useCallback","text","root","document","getElementById","createElement","innerHTML","style","cssText","appendChild","setTimeout","removeChild","useState","loading","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","then","response","json","data","ok","Error","clearError","useHttp","email","password","form","setForm","useEffect","changeHandler","event","target","name","value","registerHandler","e","preventDefault","loginHandler","small","useMediaQuery","minDeviceWidth","xsmall","className","Styles","block","page","pageMedia","heading","headingMedia","action","inputBlock","inputBlockMedia","type","input","id","autoComplete","placeholder","onChange","htmlFor","label","buttons","href","btn","btnMedia","onClick","CreatePage","marginLeft","LinksPage","DetailPage","Navbar","history","useHistory","show","setShow","open","setOpen","logoutCancel","push","elems","map","key","item","to","link","span","navbar","flexBlock","title","logo","ham","line","menu","colored","icon","src","LogOut","alt","overlay","active","messageMedia","submit","left","right","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Page1","Page2","Page3","useRoutes","Provider","app","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.26b315ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1JgC0\",\"flexBlock\":\"Navbar_flexBlock__2BvvT\",\"logo\":\"Navbar_logo__3bqPP\",\"ham\":\"Navbar_ham__2MFTF\",\"menu\":\"Navbar_menu__MRRUs\",\"item\":\"Navbar_item__2tgaB\",\"link\":\"Navbar_link__1c_bD\",\"colored\":\"Navbar_colored__3XVyX\",\"icon\":\"Navbar_icon__3TotU\",\"overlay\":\"Navbar_overlay__2oL5v\",\"message\":\"Navbar_message__1SjwF\",\"messageMedia\":\"Navbar_messageMedia__2BsmI\",\"active\":\"Navbar_active__1E0bl\",\"text\":\"Navbar_text__3xSPi\",\"submit\":\"Navbar_submit__1nc2U\",\"span\":\"Navbar_span__UY2bQ\",\"line\":\"Navbar_line__2ABHD\",\"open\":\"Navbar_open__1XpyJ\",\"title\":\"Navbar_title__2wJZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"AuthPage_block__3okvp\",\"page\":\"AuthPage_page__tHGok\",\"pageMedia\":\"AuthPage_pageMedia__15NYK\",\"heading\":\"AuthPage_heading__2LAT-\",\"headingMedia\":\"AuthPage_headingMedia__3MG2p\",\"form\":\"AuthPage_form__2GKKp\",\"inputBlock\":\"AuthPage_inputBlock__Yd5Qv\",\"inputBlockMedia\":\"AuthPage_inputBlockMedia__C53VG\",\"input\":\"AuthPage_input__ErqpO\",\"label\":\"AuthPage_label__13Ol4\",\"buttons\":\"AuthPage_buttons__2Y3FG\",\"btn\":\"AuthPage_btn__2Uoib\",\"btnMedia\":\"AuthPage_btnMedia__1br9o\",\"message\":\"AuthPage_message__3MoS9\",\"loading\":\"AuthPage_loading__3tDbW\",\"loading2\":\"AuthPage_loading2__TcIS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2vuJ-\",\"app\":\"App_app__2J1j3\"};","module.exports = __webpack_public_path__ + \"static/media/logout.ada60a6b.png\";","import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: false,\r\n    logout: false,\r\n    isAuthentificated: false\r\n})","import React, { useState, useEffect, useContext } from 'react'\r\nimport Styles from \"./AuthPage.module.css\"\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHttp } from \"./../../hooks/http.hook\"\r\nimport { useMessage } from \"./../../hooks/message.hook\"\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nconst AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { loading, request, error, clearError } = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: \"\", password: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = await request(\"/api/auth/register\", \"POST\", { ...form })\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = await request(\"/api/auth/login\", \"POST\", { ...form })\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const small = useMediaQuery(\r\n        { minDeviceWidth: 520 }\r\n    )\r\n    \r\n    const xsmall = useMediaQuery(\r\n        { minDeviceWidth: 370 }\r\n    )\r\n\r\n    return(\r\n        <div className={Styles.block}>\r\n            <div className={small ? Styles.page : `${Styles.page} ${Styles.pageMedia}`}>\r\n                <h1 className={xsmall ? Styles.heading : `${Styles.heading} ${Styles.headingMedia}`}>Authorization</h1>\r\n                <form action=\"#\" className={Styles.form}>\r\n                    <div className={small ? Styles.inputBlock : `${Styles.inputBlock} ${Styles.inputBlockMedia}`}>\r\n                        <input type=\"text\" \r\n                            className={Styles.input} \r\n                            id=\"email\" \r\n                            name=\"email\"\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Email\" \r\n                            onChange={changeHandler} />\r\n                        <label htmlFor=\"email\" className={Styles.label}>Email</label>\r\n                    </div>\r\n                    <div className={small ? Styles.inputBlock : `${Styles.inputBlock} ${Styles.inputBlockMedia}`}>\r\n                        <input type=\"password\" \r\n                            className={Styles.input} \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            autoComplete=\"current-password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={changeHandler} />\r\n                        <label htmlFor=\"password\" className={Styles.label}>Password</label>\r\n                    </div>\r\n                </form>\r\n                <div className={Styles.buttons}>\r\n                    <a\r\n                        href=\"/\"\r\n                        type=\"submit\"\r\n                        className={loading ? Styles.loading : xsmall ? Styles.btn : `${Styles.btn} ${Styles.btnMedia}`}\r\n                        onClick={loginHandler}>{loading ? \"\" : \"Login\"}</a>\r\n                    <a \r\n                        href=\"/\"\r\n                        type=\"submit\"\r\n                        className={loading ? Styles.loading : xsmall ? Styles.btn : `${Styles.btn} ${Styles.btnMedia}`}\r\n                        onClick={registerHandler}>{loading ? \"\" : \"Sign Up\"}</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage\r\n\r\n","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        let root = document.getElementById(\"root\"),\r\n            message = document.createElement(\"div\");\r\n        if (text) {\r\n            message.innerHTML = `<p style=\"color: #fff;\">${text}</p>`\r\n            message.style.cssText = \r\n            `position: absolute; \r\n            top: 50px; \r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            font-size: 18px; \r\n            background: #00e600; \r\n            padding: 5px 20px;\r\n            transition: .5s all;`\r\n            root.appendChild(message)\r\n            setTimeout(() => message.style.cssText += `top: 60px;`, 2500)\r\n            setTimeout(() => message.style.cssText += `opacity: .5;`, 2700)\r\n            setTimeout(() => root.removeChild(message), 3000)\r\n        }\r\n    }, [])\r\n}\r\n\r\n\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers[\"Content-Type\"] = \"application/json\"\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers })\r\n                .then(setLoading(true))\r\n            const data = await response.json()\r\n                .then(setLoading(false))\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Something went wrong\")\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}\r\n","import React from 'react'\r\n\r\nconst CreatePage = () => {\r\n    return(\r\n        <div>\r\n            <h2 style={{marginLeft: \"20px\"}}>Page1</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePage","import React from 'react'\r\n\r\nconst LinksPage = () => {\r\n    return(\r\n        <div>\r\n            <h2 style={{marginLeft: \"20px\"}}>Page2</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinksPage","import React from 'react'\r\n\r\nconst DetailPage = () => {\r\n    return(\r\n        <div>\r\n            <h2 style={{marginLeft: \"20px\"}}>Page3</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage","import React, { useContext, useState } from \"react\"\r\nimport Styles from \"./Navbar.module.css\"\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { NavLink, useHistory } from \"react-router-dom\"\r\nimport { AuthContext } from \"./../../context/AuthContext\"\r\nimport LogOut from \"./../../img/logout.png\"\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext) \r\n    const [show, setShow] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const showModal = event => {\r\n        event.preventDefault()\r\n        setShow(true)\r\n    }\r\n\r\n    const logoutCancel = event => {\r\n        event.preventDefault()\r\n        setShow(false)\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const menuOpen = event => {\r\n        event.preventDefault()\r\n\r\n        if (open === false){\r\n            setOpen(true)\r\n        } else {\r\n            setOpen(false)\r\n        }\r\n    }\r\n\r\n    const items = [\r\n        {url: \"/page1\", id: 1, text: \"Page1\"},\r\n        {url: \"/page2\", id: 2, text: \"Page2\"},\r\n        {url: \"/page3\", id: 3, text: \"Page3\"}\r\n    ]\r\n\r\n    const elems = items.map(({url, id, text}) => {\r\n        return <li key={ id } className={Styles.item}><NavLink to={ url } className={Styles.link}>{ id }\r\n            <span className={`${Styles.span} ${open ? Styles.open : \"\"}`}>{ text }</span>\r\n        </NavLink></li>\r\n    })\r\n\r\n    const small = useMediaQuery(\r\n        { minDeviceWidth: 520 }\r\n    )\r\n\r\n    return(\r\n        <nav className={`${Styles.navbar} ${open ? Styles.open : \"\"}`}>\r\n            <div className={Styles.flexBlock}>\r\n                <div className={Styles.title}>\r\n                    <a href=\"/\" className={`${Styles.logo} ${open ? Styles.open : \"\"}`}>Logo</a>\r\n                    <a href=\"/\" className={Styles.ham} onClick={menuOpen}>\r\n                        <span className={`${Styles.line} ${open ? Styles.open : \"\"}`}></span>\r\n                        <span className={Styles.line}></span>\r\n                        <span className={`${Styles.line} ${open ? Styles.open : \"\"}`}></span>\r\n                    </a>\r\n                </div>\r\n                <ul className={Styles.menu}>\r\n                    { elems }\r\n                    <li className={Styles.item}>\r\n                        <a href=\"/\" className={`${Styles.link} ${Styles.colored}`} onClick={showModal}>\r\n                            <img className={Styles.icon} src={LogOut} alt=\"logout\"/>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={`${Styles.overlay} ${show ? Styles.active : !show}`} onClick={logoutCancel}></div>\r\n            <div className={`${small ? Styles.message : `${Styles.message} ${Styles.messageMedia}`} ${Styles.message} ${show ? Styles.active : !show}`}>\r\n                <p className={Styles.text}>Are you sure, that you want to logout?</p>\r\n                <a href=\"/\" className={`${Styles.submit} ${Styles.left}`} onClick={logoutHandler}>Yes</a>\r\n                <a href=\"/\" className={`${Styles.submit} ${Styles.right}`} onClick={logoutCancel}>No</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// ","import React from 'react'\nimport Styles from \"./App.module.css\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { useRoutes } from \"./routes\"\nimport { useAuth } from \"./hooks/auth.hook\"\nimport { AuthContext } from \"./context/AuthContext\"\nimport { Navbar } from './components/Navbar/Navbar'\n\nfunction App() {\n\tconst { token, login, logout, userId } = useAuth()\n\tconst isAuthentificated = !!token\n\tconst routes = useRoutes(isAuthentificated)\n  \treturn (\n\t\t<AuthContext.Provider value={{\n\t\t\ttoken, login, logout, userId, isAuthentificated\n\t\t}}>\n\t\t\t<Router>\n\t\t\t\t<div className={Styles.app}>\n\t\t\t\t\t{ isAuthentificated && <Navbar /> }\n\t\t\t\t\t{ routes }\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n  \t);\n}\n\nexport default App\n","import { useState, useCallback, useEffect } from \"react\"\r\n\r\nconst storageName = \"userData\"\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({ userId: id, token: jwtToken }))\r\n    }, [])\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n    }, [login])\r\n\r\n    return { login, logout, token }\r\n}   ","import React from \"react\"\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport AuthPage from \"./pages/AuthPage/AuthPage\"\r\nimport Page1 from \"./pages/Page1/Page1\"\r\nimport Page2 from \"./pages/Page2/Page2\"\r\nimport Page3 from \"./pages/Page3/Page3\"\r\n\r\nexport const useRoutes = isAuthentificated => {\r\n    if (isAuthentificated) {\r\n        return(\r\n            <Switch>\r\n                <Route path=\"/page1\" exact>\r\n                    <Page1 />\r\n                </Route>\r\n                <Route path=\"/page2\" exact>\r\n                    <Page2 />\r\n                </Route>\r\n                <Route path=\"/page3\" exact>\r\n                    <Page3 />\r\n                </Route>\r\n                <Redirect to=\"/page1\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}